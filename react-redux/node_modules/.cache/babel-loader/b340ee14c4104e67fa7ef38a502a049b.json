{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/utsavpandey8/EMOH/redux-starter/react-redux/src/components/UserContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../redux';\n\nfunction UserContainer() {\n  _s();\n\n  useEffect(({\n    userData,\n    fetchUsers\n  }) => {\n    fetchUsers();\n  }, []);\n  return userData.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this) : userData.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: userData.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData && userData.users && userData.users.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 74\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UserContainer;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapDispatchToProps, mapStateToProps)(UserContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContainer\");","map":{"version":3,"sources":["/home/utsavpandey8/EMOH/redux-starter/react-redux/src/components/UserContainer.js"],"names":["React","useEffect","connect","fetchUsers","UserContainer","userData","loading","error","users","map","user","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,UAAzB;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AAErBH,EAAAA,SAAS,CAAC,CAAC;AAACI,IAAAA,QAAD;AAAUF,IAAAA;AAAV,GAAD,KAA2B;AACjCA,IAAAA,UAAU;AACb,GAFQ,EAEP,EAFO,CAAT;AAIA,SAAOE,QAAQ,CAACC,OAAT,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,GAEHD,QAAQ,CAACE,KAAT,gBACA;AAAA,cAAKF,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,UADA,gBAGA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACIF,QAAQ,IAAIA,QAAQ,CAACG,KAArB,IAA8BH,QAAQ,CAACG,KAAT,CAAeC,GAAf,CAAmBC,IAAI,iBAAI;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cAA3B;AADlC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ;AAYH;;GAlBQP,a;;KAAAA,a;;AAoBT,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHR,IAAAA,QAAQ,EAAEQ,KAAK,CAACH;AADb,GAAP;AAGH,CAJD;;AAMA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHZ,IAAAA,UAAU,EAAE,MAAMY,QAAQ,CAACZ,UAAU,EAAX;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACY,kBAAD,EAAoBF,eAApB,CAAP,CAA4CR,aAA5C,CAAf","sourcesContent":["import React,{useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {fetchUsers} from '../redux'\n\nfunction UserContainer() {\n\n    useEffect(({userData,fetchUsers}) => {\n        fetchUsers()\n    },[])\n\n    return userData.loading ? (\n        <h2>Loading</h2>\n    ) : userData.error ? (\n        <h2>{userData.error}</h2>\n    ) : (\n        <div> \n            <h2>User List</h2>\n            <div>{\n                userData && userData.users && userData.users.map(user => <p>{user.name}</p>)\n            }</div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        userData: state.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchUsers: () => dispatch(fetchUsers())\n    }\n}\n\nexport default connect(mapDispatchToProps,mapStateToProps)(UserContainer)\n"]},"metadata":{},"sourceType":"module"}